{"remainingRequest":"/home/user/Work/ethsender/node_modules/babel-loader/lib/index.js!/home/user/Work/ethsender/node_modules/ts-loader/index.js??ref--15-2!/home/user/Work/ethsender/node_modules/eslint-loader/index.js??ref--14-0!/home/user/Work/ethsender/src/utils/network.ts","dependencies":[{"path":"/home/user/Work/ethsender/src/utils/network.ts","mtime":1643148356512},{"path":"/home/user/Work/ethsender/babel.config.js","mtime":1643121690025},{"path":"/home/user/Work/ethsender/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Work/ethsender/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/user/Work/ethsender/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/user/Work/ethsender/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3VzZXIvV29yay9ldGhzZW5kZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IHdlYjMgfSBmcm9tICcuL3dlYjMnOwppbXBvcnQgeyBBQ0NFUFRfTkVUV09SSyB9IGZyb20gJy4uL2NvbnN0YW50cy9uZXR3b3JrJzsKZXhwb3J0IHZhciBuZXR3b3JrID0gcmVmKG51bGwpOwpleHBvcnQgdmFyIGNoZWNrTmV0d29yayA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUobmV0d29ya0lkKSB7CiAgICB2YXIgY3VycmVudE5ldHdvcmtJZDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBOdW1iZXI7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gbmV0d29ya0lkOwoKICAgICAgICAgICAgaWYgKF9jb250ZXh0LnQxKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gd2ViMy5ldGgubmV0LmdldElkKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBfY29udGV4dC50MSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dC50MiA9IF9jb250ZXh0LnQxOwogICAgICAgICAgICBjdXJyZW50TmV0d29ya0lkID0gKDAsIF9jb250ZXh0LnQwKShfY29udGV4dC50Mik7CiAgICAgICAgICAgIG5ldHdvcmsudmFsdWUgPSB7CiAgICAgICAgICAgICAgaWQ6IGN1cnJlbnROZXR3b3JrSWQsCiAgICAgICAgICAgICAgaXNDb3JyZWN0TmV0d29yazogQUNDRVBUX05FVFdPUksuaWQgPT09IGN1cnJlbnROZXR3b3JrSWQKICAgICAgICAgICAgfTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICByZXR1cm4gY2hlY2tHYXNQcmljZSgpOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGlmIChuZXR3b3JrSWQpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIEFDQ0VQVF9ORVRXT1JLLmlkID09PSBjdXJyZW50TmV0d29ya0lkKTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrTmV0d29yayhfeCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CmV4cG9ydCB2YXIgYWRkTmV0d29ya0xpc3RlbmVyID0gZnVuY3Rpb24gYWRkTmV0d29ya0xpc3RlbmVyKCkgewogIHdpbmRvdy5ldGhlcmV1bS5vbignbmV0d29ya0NoYW5nZWQnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihuZXR3b3JrSWQpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGNoZWNrTmV0d29yayhuZXR3b3JrSWQpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpOwoKICAgIHJldHVybiBmdW5jdGlvbiAoX3gyKSB7CiAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCkpOwp9OwpleHBvcnQgdmFyIGNoZWNrR2FzUHJpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiB3ZWIzLmV0aC5nZXRHYXNQcmljZSgpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgbmV0d29yay52YWx1ZS5nYXNQcmljZSA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrR2FzUHJpY2UoKSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7"},{"version":3,"sources":["/home/user/Work/ethsender/node_modules/eslint-loader/index.js??ref--14-0!/home/user/Work/ethsender/src/utils/network.ts"],"names":[],"mappings":";;;AACA,SAAS,GAAT,QAAoB,KAApB;AACA,SAAS,IAAT,QAAqC,QAArC;AACA,SAAS,cAAT,QAA+B,sBAA/B;AAEA,OAAO,IAAM,OAAO,GAAG,GAAG,CAAwB,IAAxB,CAAnB;AAEP,OAAO,IAAM,YAAY;AAAA,qEAAG,iBAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACD,MADC;AAAA,0BACM,SADN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBACyB,IAAI,CAAC,GAAL,CAAS,GAAT,CAAa,KAAb,EADzB;;AAAA;AAAA;;AAAA;AAAA;AACpB,YAAA,gBADoB;AAG1B,YAAA,OAAO,CAAC,KAAR,GAAgB;AACd,cAAA,EAAE,EAAE,gBADU;AAEd,cAAA,gBAAgB,EAAE,cAAc,CAAC,EAAf,KAAsB;AAF1B,aAAhB;AAH0B;AAAA,mBAOpB,aAAa,EAPO;;AAAA;AAAA,gBASrB,SATqB;AAAA;AAAA;AAAA;;AAAA,6CAUjB,cAAc,CAAC,EAAf,KAAsB,gBAVL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZ,YAAY;AAAA;AAAA;AAAA,GAAlB;AAcP,OAAO,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAAK;AACrC,EAAA,MAAM,CAAC,QAAP,CAAgB,EAAhB,CAAmB,gBAAnB;AAAA,wEAAqC,kBAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC7B,YAAY,CAAC,SAAD,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArC;;AAAA;AAAA;AAAA;AAAA;AAGD,CAJM;AAMP,OAAO,IAAM,aAAa;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,IAAI,CAAC,GAAL,CAAS,WAAT,EADJ;;AAAA;AAC3B,YAAA,OAAO,CAAC,KAAR,CAAc,QADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAb,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import { CurrentNetwork } from '../interfaces/Network'\nimport { ref } from 'vue'\nimport { web3, fromWei, toWei } from './web3'\nimport { ACCEPT_NETWORK } from '../constants/network'\n\nexport const network = ref<CurrentNetwork | null>(null)\n\nexport const checkNetwork = async (networkId?: number):Promise<boolean> => {\n  const currentNetworkId = Number(networkId || await web3.eth.net.getId())\n\n  network.value = {\n    id: currentNetworkId,\n    isCorrectNetwork: ACCEPT_NETWORK.id === currentNetworkId\n  }\n  await checkGasPrice()\n\n  if (!networkId) {\n    return ACCEPT_NETWORK.id === currentNetworkId\n  }\n}\n\nexport const addNetworkListener = () => {\n  window.ethereum.on('networkChanged', async (networkId: number) => {\n    await checkNetwork(networkId)\n  })\n}\n\nexport const checkGasPrice = async () => {\n  network.value.gasPrice = await web3.eth.getGasPrice()\n//   network.value.humanizedGasPrice = toWei(network.value.gasPrice)\n}\n"],"sourceRoot":""}]}